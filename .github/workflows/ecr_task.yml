name: AWS ECR Task

on:
    push:
        branches:
            - master
    pull_request:
        types:
            - opened
            - synchronize
            - reopened
            - ready_for_review

jobs:
    build:
        runs-on: ubuntu-latest
        if: github.event.pull_request.draft == false
        steps:
            - name: Configure AWS Credentials
              uses: aws-actions/configure-aws-credentials@v4
              with:
                  aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
                  aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
                  aws-region: ${{ secrets.AWS_REGION }}

            - uses: actions/checkout@v4
              with:
                  ref: ${{ github.event.pull_request.head.sha || github.sha }}

            - name: Docker Layer Caching
              uses: satackey/action-docker-layer-caching@v0.0.11
              continue-on-error: true

            - name: Login to Amazon ECR
              id: login-ecr
              uses: aws-actions/amazon-ecr-login@v2

            - name: Docker Build Task
              run: docker build -t task task/

            - name: Docker Tag Task
              run: docker tag task ${{secrets.AWS_ACCOUNT_ID}}.dkr.ecr.us-east-1.amazonaws.com/batch:task-${{ github.event.pull_request.head.sha || github.sha }}

            - name: Docker Push Task
              run: docker push ${{secrets.AWS_ACCOUNT_ID}}.dkr.ecr.us-east-1.amazonaws.com/batch:task-${{ github.event.pull_request.head.sha || github.sha }}

            - name: Docker Task Lint
              run: docker run task npm run lint

            - name: Docker Task Test
              run: docker run -e AWS_ACCOUNT_ID=${{secrets.AWS_ACCOUNT_ID}} -e AWS_REGION=${{secrets.AWS_REGION}} -e AWS_ACCESS_KEY_ID=${{secrets.AWS_ACCESS_KEY_ID}} -e AWS_SECRET_ACCESS_KEY=${{secrets.AWS_SECRET_ACCESS_KEY}} task npm test
